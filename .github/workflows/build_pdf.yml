name: Build Book PDF

on:
  push:
    # Tag push starting with v triggers PDF build and release
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
        type: string

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Pandoc and LaTeX
        run: |
          sudo apt-get update
          
          # 最新のPandocをインストール（より確実な方法）
          wget -qO- https://github.com/jgm/pandoc/releases/download/3.1.9/pandoc-3.1.9-linux-amd64.tar.gz | tar xzf - --strip-components 1 -C /tmp
          sudo cp /tmp/bin/pandoc /usr/local/bin/
          sudo cp /tmp/bin/pandoc-lua /usr/local/bin/ || true
          
          # Pandocのバージョンを確認
          pandoc --version
          
          # 基本的なLaTeX環境
          sudo apt-get install -y texlive-xetex texlive-lang-japanese
          
          # 技術書に必要な追加LaTeXパッケージ
          sudo apt-get install -y \
            texlive-latex-extra \
            texlive-fonts-extra \
            texlive-fonts-recommended \
            texlive-science \
            texlive-pictures \
            fonts-noto-cjk
          
          # 美しいフォントの追加インストール
          # Libertinus フォント（Linuxではfonts-linuxlibertineが該当）
          sudo apt-get install -y fonts-linuxlibertine
          
          # JetBrains Mono フォント
          wget -O jetbrains-mono.zip https://download.jetbrains.com/fonts/JetBrainsMono-2.304.zip
          unzip jetbrains-mono.zip
          sudo mkdir -p /usr/share/fonts/truetype/jetbrains-mono
          sudo cp fonts/ttf/*.ttf /usr/share/fonts/truetype/jetbrains-mono/
          sudo fc-cache -f -v
          
          # フォントキャッシュの更新
          sudo fc-cache -fv
          
      - name: Combine Markdown files
        run: |
          mkdir -p build
          ls chapters/*.md | sort | xargs cat > build/book.md
          
      - name: Convert to PDF
        run: |
          # luaフィルターファイルの存在確認
          ls -la pandoc/codeblock-filter.lua
          
          # まずluaフィルターなしでテスト
          echo "Testing PDF generation without lua filter..."
          pandoc build/book.md --defaults pandoc/latex.yaml -o build/book-test.pdf
          
          # luaフィルター付きでPDF生成
          echo "Generating PDF with lua filter..."
          if [ -f "pandoc/codeblock-filter.lua" ]; then
            pandoc build/book.md --defaults pandoc/latex.yaml --lua-filter pandoc/codeblock-filter.lua -o build/book.pdf
          else
            echo "Lua filter not found, using test PDF as final output"
            mv build/book-test.pdf build/book.pdf
          fi
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: book-pdf
          path: build/book.pdf
          
      - name: Create Release and attach PDF
        uses: softprops/action-gh-release@v1
        with:
          files: build/book.pdf
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
