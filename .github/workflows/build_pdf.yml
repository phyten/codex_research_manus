name: Build Book PDF

on:
  push:
    # Tag push starting with v triggers PDF build and release
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Release tag (e.g. v1.0.0)'
        required: true
        type: string

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Build Docker image
        run: |
          docker build -t texlive-pandoc .
          
      - name: Verify Docker environment
        run: |
          docker run --rm texlive-pandoc pandoc --version
          docker run --rm texlive-pandoc lualatex --version
          echo "Available Japanese fonts:"
          docker run --rm texlive-pandoc fc-list | grep -E "(Noto|Takao|VL|Gothic|Mincho)" | head -10
          echo "tcolorbox package availability:"
          docker run --rm texlive-pandoc kpsewhich tcolorbox.sty
          
      - name: Combine Markdown files
        run: |
          mkdir -p build
          ls chapters/*.md | sort | xargs cat > build/book.md
          echo "Combined file size: $(wc -l build/book.md) lines"
          
      - name: Convert to PDF
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace texlive-pandoc \
            pandoc build/book.md --defaults pandoc/latex.yaml --lua-filter pandoc/codeblock-filter.lua -o build/book.pdf --verbose
          
      - name: Verify PDF generation
        run: |
          ls -la build/book.pdf
          echo "PDF generated successfully!"
          
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: book-pdf
          path: build/book.pdf
          
      - name: Create Release and attach PDF
        uses: softprops/action-gh-release@v1
        with:
          files: build/book.pdf
          tag_name: ${{ github.event.inputs.tag_name || github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
